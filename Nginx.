一.Nginx安装
apt-get update
apt-get install nginx
apt-get install zip
如无法访问 需要查看服务器防火墙是否web推荐 未开启80端口 阿里云需要添加安全组
/etc/nginx/sites-avai... 修改根目录设置
ssh-keygen -t rsa -C "youremail@example.com" 生成公钥
git clone 项目地址
curl -sS https://getcomposer.org/installer | php 下载composer
/usr/bin/php composer.phar --version 安装
sudo mv composer.phar /usr/local/bin/composer 看情况移动或改名
如报错:Your requirements could not be resolved to an installable set of packages.
则:composer install --ignore-platform-reqs



二.设置https
1.申请ssl;
2.得到两个文件;
3.mkdir /etc/nginx/ssl;
4.把两个文件放进去;
5.vim /etc/nginx/sites-avai.../default 修改SSL configurations：

	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	ssl on;
	ssl_certificate 文件路径;
	ssl_certificate_key key文件路径;
6.添加 //从域名直接跳转到https
server{
	listen 80 default_server;
	listen [::] 80 default_server;
	server_name lingering.xyz www.lingering.xyz;
	return 301 https://$server_name$request_uri;
}



三、ssl安全配置
1.cd /etc/nginx/sites-available;
2.sudo openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048;
3./etc/nginx/sites-available/default中ssl部分下面添加:
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_ecdh_curve secp384r1;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	ssl_dhparam /etc/nginx/ssl/dhparam.pem;



四.安装php和数据库
sudo apt-get update
sudo apt-get install software-properties-common python-software-properties
sudo LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/php -y
sudo apt-get update
sudo apt-get -y install php7.1
sudo apt-get -y install php7.1-mysql php7.1-fpm
vim /etc/php/7.1/fpm/php.ini     cgi.fix_pathinfo=0
service php7.1-fpm restart
sudo apt-get -y install mysql-server-5.7
安装php插件
sudo apt-get install php7.0-bcmath 
sudo apt-get install php7.0-bz2 
sudo apt-get install php7.0-calendar 
sudo apt-get install php7.0-ctype 
sudo apt-get install php7.0-curl 
sudo apt-get install php7.0-dom 
sudo apt-get install php7.0-enchant 
sudo apt-get install php7.0-exif 
sudo apt-get install php7.0-fileinfo 
sudo apt-get install php7.0-ftp 
sudo apt-get install php7.0-gd 
sudo apt-get install php7.0-gettext 
sudo apt-get install php7.0-gmp 
sudo apt-get install php7.0-iconv 
sudo apt-get install php7.0-intl 
sudo apt-get install php7.0-json 
sudo apt-get install php7.0-ldap 
sudo apt-get install php7.0-mbstring 
sudo apt-get install php7.0-mysqli 
sudo apt-get install php7.0-mysqlnd 
sudo apt-get install php7.0-opcache 
sudo apt-get install php7.0-pdo 
sudo apt-get install php7.0-phar 
sudo apt-get install php7.0-posix 
sudo apt-get install php7.0-pspell 
sudo apt-get install php7.0-readline 
sudo apt-get install php7.0-shmop 
sudo apt-get install php7.0-simplexml 
sudo apt-get install php7.0-snmp 
sudo apt-get install php7.0-soap 
sudo apt-get install php7.0-sockets 
sudo apt-get install php7.0-sqlite3 
sudo apt-get install php7.0-sysvmsg 
sudo apt-get install php7.0-sysvsem 
sudo apt-get install php7.0-sysvshm 
sudo apt-get install php7.0-wddx 
sudo apt-get install php7.0-xml 
sudo apt-get install php7.0-xsl
以下不能一次性全部安装，因为要选y 
sudo apt-get install php7.0-recode 
sudo apt-get install php7.0-dba 
sudo apt-get install php7.0-imap 
sudo apt-get install php7.0-interbase 
sudo apt-get install php7.0-odbc 
sudo apt-get install php7.0-pgsql 
sudo apt-get install php7.0-tidy 
sudo apt-get install php7.0-zip

数据库安装:
apt-get install mysql-server
systemctl start mysql.service 如不成功 systemctl enable mysql.service
mysql -u root -p
grant all privileges on *.* to root@'localhost' identified by '密码'
grant all privileges on *.* to name@'%' identified by '密码'
systemctl restart mysql.service
生成随机密码:
cat /dev/urandom | LC_ALL=C tr -dc "[:alnum:]" | fold -w 16 |head -16
									 :graph: 特殊符号
查看端口开启: netstat -tulpen
如只开启了127.0.0.1:3306 需修改/etc/mysql/mysql.conf.d/mysqld.cnf bind-address  = 0.0.0.0

数据库忘记密码:
方法一:
vim /etc/mysql/debian.cnf
mysql -u debian-sys-maint -p
use mysql;
update user set authentication_string=password('new password') where User='root';
quit;
方法二:
sudo /etc/init.d/mysql stop
sudo mkdir -p /var/run/mysqld
sudo chown mysql:mysql /var/run/mysqld
sudo /usr/bin/mysqld_safe --skip-grant-tables --skip-networking & mysql -u root
use mysql;
update user set authentication_string=PASSWORD("You'r New Password") where User='root';
update user set plugin="mysql_native_password";
flush privileges;
quit;



五.server配置
ps  -ef | grep nginx 查看nginx配置文件位置
server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/audio/public;

        # Add index.php to the list if you are using PHP
        index index.html index.php index.htm index.nginx-debian.html;

        server_name _;
         location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                #try_files $uri $uri/ =404;
                try_files $uri $uri/ /index.php?$query_string;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
                try_files $uri /index.php =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php/php7.1-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        #
        #       # With php7.0-cgi alone:
        #       fastcgi_pass 127.0.0.1:9000;
        #       # With php7.0-fpm:
        #       fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        }
	}
如laravel.log无权限:
sudo chown -R root:www-data storage
sudo chown -R root:www-data bootstrap/cache
sudo chmod -R 775 storage
sudo chmod -R 775 bootstrap/cache



六.定时任务
crontab -e 
3
* * * * * php /path-to-your-project/artisan schedule:run >> /dev/null 2>&1



七.github服务器自动拉取
sudo mkdir /var/www/.ssh
sudo chown -R www-data:www-data /var/www/.ssh/
cd /var/www 
sudo -Hu www-data ssh-keygen -t rsa
sudo -Hu www-data git clone git@gitee.com:unbridled/audio.git 如果无权限 sudo chmod o+w /var/www
webhooks 添加路由 
php artisan tinker > str_random(32) 添加密码
.env GITHUB_DEPLOY_TOKEN=密码
php artisan make:controller DeploymentController
<?php
namespace App\Http\Controllers;
use Illuminate\Http\Request;
/**
 * Class DeploymentController
 *
 * @package App\Http\Controllers
 */
class DeploymentController extends Controller
{
    /**
     * @param Request $request
     */
    public function deploy(Request $request)
    {
        $commands = ['cd /var/www/laravel-ubuntu', 'git pull'];
        $signature = $request->header('X-Hub-Signature'); // $headers = getallheaders(); $headers['X-Hub-Signature']
        $payload = file_get_contents('php://input');
        if ($this->isFromGithub($payload, $signature)) {
            foreach ($commands as $command) {
                shell_exec($command);
            }
            http_response_code(200);
        } else {
            abort(403);
        }
    }
    /**
     * @param $payload
     * @param $signature
     * @return bool
     */
    private function isFromGithub($payload, $signature)
    {
        return 'sha1=' . hash_hmac('sha1', $payload, env('GITHUB_DEPLOY_TOKEN'), false) === $signature;
    }
}
Route::post('deploy', 'DeploymentController@deploy')
app\Http\Middleware\VerifyCsrfToken.php  'deploy'



八.虚拟内存 swap
free -m 查看内存状态
dd if=/dev/zero of=/var/swap bs=1024 count=2048000 增加2g的swap空间
mkswap /var/swap /or/ mkswap -f /var/swap 创建swap文件
swapon /var/swap 加载文件/开启
cat /proc/swaps 查看swap状态
vim /etc/fstab 添加/etc/fstab
/var/swap swap swap defaults 0 0
swapoff /var/swap 清理分区


其他资源
通过ip地址获取具体信息: http://ip.taobao.com/service/getIpInfo.php?ip=$ip
git配置: vim ~/.oh-my-zsh/plugins/git/git.plugin.zsh
laravel生成.env key: php artisan key:generate
laravel生成数据库表: php artisan migrate
git清楚缓存: git rm -r --cached .
查找php安装目录: php -i | grep "Loaded Configuration File"
mysql安装目录: /usr/bin/mysql --help | grep -A1 'Default options'
nginx安装目录: ps -ef | grep 'nginx'
php-fpm安装目录: ps -ef | grep 'php-fpm'
php版本切换: update-alternatives --config php
正则匹配手机号: /1(3[\d]|4[57]|5[0-35-9]|7[01678]|8[\d])[\d]{8}/

